# Berechnung der Gesamtbeiträge der Wörter zum Sentiment
total_sentiment_contribution <- cleaned_hits_df %>% 
  inner_join(SentiWS_df, by = "word") %>%
  filter(!word %in% stopwords_list) %>%  # Stoppwörter filtern
  mutate(sentiment_contribution = sentiment * n()) %>%
  group_by(word, polarity) %>%
  summarize(sentiment_score = mean(sentiment, na.rm = TRUE), 
            frequency = n(), 
            total_contribution = sentiment_score * frequency, # Sentimentwert mal Häufigkeit
            .groups = "drop")

# Die 15 größten positiven und negativen Beiträge nach total_contribution extrahieren
top_positive_contributors <- total_sentiment_contribution %>%
  filter(polarity == "positive") %>%
  arrange(desc(total_contribution)) %>%
  head(15)

write.csv(top_positive_contributors, "top_15_positive_contributors_Palastin.csv", row.names = FALSE)

top_negative_contributors <- total_sentiment_contribution %>%
  filter(polarity == "negative") %>%
  arrange(total_contribution) %>%
  head(15)

write.csv(top_negative_contributors, "top_15_negative_contributors_Palastin.csv", row.names = FALSE)

# Tabelle der 15 größten positiven Beitragswörter (Wort, Häufigkeit, Sentimentwert, Total Contribution)
positive_table_plot <- ggplot(top_positive_contributors, aes(x = reorder(word, total_contribution), y = sentiment_score)) +
  geom_point() +
  labs(title = "Top 15 Positive Contributors - Tabelle",
       x = "Begriff",
       y = "Sentimentwert") +
  theme_minimal() +
  theme(plot.title = element_text(size = 16, face = "bold"),
        axis.text = element_text(size = 12),
        axis.title = element_text(size = 14)) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

# Tabelle als Plot erzeugen und als PNG speichern
positive_table <- top_positive_contributors %>%
  select(word, frequency, sentiment_score, total_contribution)

table_plot <- ggplot() +
  theme_void() +
  annotation_custom(
    grob = tableGrob(positive_table),
    xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf
  )

ggsave("top_15_positive_contributors_table_Palastin.png", plot = table_plot, width = 12, height = 6, dpi = 300)

# Tabelle der 15 größten negativen Beitragswörter (Wort, Häufigkeit, Sentimentwert, Total Contribution)
negative_table_plot <- ggplot(top_negative_contributors, aes(x = reorder(word, total_contribution), y = sentiment_score)) +
  geom_point() +
  labs(title = "Top 15 Negative Contributors - Tabelle",
       x = "Begriff",
       y = "Sentimentwert") +
  theme_minimal() +
  theme(plot.title = element_text(size = 16, face = "bold"),
        axis.text = element_text(size = 12),
        axis.title = element_text(size = 14)) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

# Tabelle als Plot erzeugen und als PNG speichern
negative_table <- top_negative_contributors %>%
  select(word, frequency, sentiment_score, total_contribution)

table_plot_negative <- ggplot() +
  theme_void() +
  annotation_custom(
    grob = tableGrob(negative_table),
    xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf
  )

ggsave("top_15_negative_contributors_table-Palastin.png", plot = table_plot_negative, width = 12, height = 6, dpi = 300)
