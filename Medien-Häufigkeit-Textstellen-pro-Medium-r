# Benötigte Pakete installieren und laden
required_packages <- c("readr", "dplyr", "ggplot2", "tidyverse", "stringr")
new_packages <- required_packages[!(required_packages %in% installed.packages()[, "Package"])]
if (length(new_packages)) install.packages(new_packages)
lapply(required_packages, library, character.only = TRUE)

# Datei laden
medien_combined_cleaned <- read_csv("Medien_Gesamt_bereinigt.csv")

# Überprüfen, ob die 'Date' und 'Bibl' Spalten vorhanden sind
if (!all(c("Date", "Bibl", "cleaned_hits") %in% colnames(medien_combined_cleaned))) {
  stop("Die Datei muss die Spalten 'Date', 'Bibl' und 'cleaned_hits' enthalten.")
}

# Zeitungnamen extrahieren (alles vor dem Komma, wo das Datum beginnt)
medien_combined_cleaned <- medien_combined_cleaned %>%
  mutate(zeitung = str_extract(Bibl, "^[^,]+"))  # Extrahiere alles vor dem Komma

# Entfernen von Leerzeichen aus den extrahierten Zeitungsnamen
medien_combined_cleaned <- medien_combined_cleaned %>%
  mutate(zeitung = str_trim(zeitung))

# Konvertiere die 'Date'-Spalte in das richtige Datumsformat
medien_combined_cleaned <- medien_combined_cleaned %>%
  mutate(Date = as.Date(Date, format = "%Y-%m-%d"))

# Erstelle eine neue Spalte 'Year' für das Jahr
medien_combined_cleaned <- medien_combined_cleaned %>%
  mutate(Year = format(Date, "%Y"))

# Filtern der einzelnen Medien (Der Tagesspiegel, Die Zeit, Frankfurter Allgemeine Zeitung)
medien_filtered <- medien_combined_cleaned %>%
  filter(zeitung %in% c("Der Tagesspiegel", "Die Zeit", "Frankfurter Allgemeine Zeitung"))

# Überprüfen, ob nach dem Filtern Daten vorhanden sind
if (nrow(medien_filtered) == 0) {
  stop("Es wurden keine Artikel für die angegebenen Medien gefunden.")
}

# Häufigkeit der Berichterstattung pro Jahr und Medium
articles_per_medium_year <- medien_filtered %>%
  group_by(Year, zeitung) %>%
  summarise(Count = n(), .groups = "drop")

# Visualisierung der Häufigkeit der Berichterstattung pro Medium als Liniendiagramm
medium_plot <- ggplot(articles_per_medium_year, aes(x = Year, y = Count, color = zeitung, group = zeitung)) +
  geom_line(size = 1) +
  theme_minimal() +
  labs(
    title = "Häufigkeit der Textstellen nach Medium pro Jahr",
    x = "Jahr",
    y = "Anzahl der Textstellen",
    color = "Medium"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Speichern der Visualisierung als PNG
ggsave("Artikel_Pro_Medium.png", plot = medium_plot, width = 10, height = 6)

# Speichern der aggregierten Daten (Artikel pro Jahr und Medium) als CSV
write_csv(articles_per_medium_year, "Artikel_Pro_Medium_und_Jahr.csv")

# Ausgabe
cat("Die Visualisierung und CSV-Datei wurden erfolgreich gespeichert.\n")
